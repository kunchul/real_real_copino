<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>copino check </title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/shorthandcss@1.1.1/dist/shorthand.min.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Muli:200,300,400,500,600,700,800,900&display=swap" />
    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick.min.css" />
    <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css" />
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script>
        const socket = io(); // Socket.io 클라이언트 인스턴스 초기화

        // 서버로부터 변경된 데이터를 수신하여 테이블 업데이트
        socket.on('updateData', function(data) {
            // 각 데이터 행을 확인하면서 변경된 부분만 업데이트
            data.forEach(function(row) {
                // 기존 테이블의 해당 행을 찾음
                const existingRow = $('#ts tr[data-id="' + row.id + '"]');
                if (existingRow.length) {
                    // 해당 행이 이미 존재하는 경우, 변경된 데이터로 업데이트
                    existingRow.find('.vehicle-number').text(row.CAR);
                    existingRow.find('.container-number').text(row.CUNT);
                    existingRow.find('.summary').text(row.OUT);
                    existingRow.find('.transmission-error').text(row.COPINO_OUT);
                    existingRow.find('.gate-out').text(row.GATE_OUT);
                    existingRow.find('.get-off').text(row.IN);
                    existingRow.find('.transmission-error-2').text(row.COPINO_IN);
                    existingRow.find('.gate-in').text(row.GATE_IN);
                } else {
                    // 해당 행이 존재하지 않는 경우, 새로운 행으로 추가
                    const newRow = $('<tr>');
                    newRow.attr('data-id', row.id); // 변경 사항을 추적하기 위해 고유한 ID 설정
                    newRow.append('<td class="vehicle-number">' + row.CAR + '</td>');
                    newRow.append('<td class="container-number">' + row.CUNT + '</td>');
                    newRow.append('<td class="summary">' + row.OUT + '</td>');
                    newRow.append('<td class="transmission-error">' + row.COPINO_OUT + '</td>');
                    newRow.append('<td class="gate-out">' + row.GATE_OUT + '</td>');
                    newRow.append('<td class="get-off">' + row.IN + '</td>');
                    newRow.append('<td class="transmission-error-2">' + row.COPINO_IN + '</td>');
                    newRow.append('<td class="gate-in">' + row.GATE_IN + '</td>');
                    $('#ts').append(newRow);
                }
            });
        });
    </script>
</head>

<body class="bg-black muli">
    <nav class="w-100pc flex flex-column md-flex-row md-px-10 py-5 bg-black">
        <div class="flex justify-between">
            <a href="#" class="flex items-center p-2 mr-4 no-underline">
            </a>
            <a data-toggle="toggle-nav" data-target="#nav-items" href="#"
                class="flex items-center ml-auto md-hidden indigo-lighter opacity-50 hover-opacity-100 ease-300 p-1 m-3">
                <i data-feather="menu"></i>
            </a>
        </div>
        <div id="nav-items" class="hidden flex sm-w-100pc flex-column md-flex md-flex-row md-justify-end items-center">
            <a href="TS" class="fs-s1 mx-3 py-3 indigo no-underline hover-underline">T/S(신)</a>
            <a href="TS" class="fs-s1 mx-3 py-3 indigo no-underline hover-underline">T/S(북)</a>
            <a href="LOCAL" class="fs-s1 mx-3 py-3 indigo no-underline hover-underline">LOCAL(신)</a>
            <a href="LOCAL" class="fs-s1 mx-3 py-3 indigo no-underline hover-underline">LOCAL(북)</a>
        </div>
    </nav>


    <script src="/socket.io/socket.io.js"></script>
    <section class="custom-table-container">
        <div class="container">
            <table id="ts" class="custom-table">
                <tr>
                    <th>차량번호</th> <!-- 실제 데이터베이스의 컬럼명과 일치하는지 확인 필요 -->
                    <th>컨테이너 번호</th> <!-- 'CUNT' 컬럼에 해당하는 데이터를 여기에 표시 -->
                    <th>상차지</th> <!-- 추가적인 정보가 필요하다면 데이터베이스 쿼리 수정 필요 -->
                    <th>전송(오류)여부</th> <!-- 해당 정보를 담고 있는 컬럼이 있는지 확인 필요 -->
                    <th>GATE OUT</th> <!-- 'OUT' 컬럼에 해당하는 데이터를 여기에 표시 -->
                    <th>하차지</th> <!-- 추가적인 정보가 필요하다면 데이터베이스 쿼리 수정 필요 -->
                    <th>전송(오류)여부</th> <!-- 해당 정보를 담고 있는 컬럼이 있는지 확인 필요 -->
                    <th>GATE IN</th> <!-- 'IN' 컬럼에 해당하는 데이터를 여기에 표시 -->
                </tr>
                <% data.forEach(function(row) { %> 
                <tr data-id="<%= row.id %>">
                    <td class="vehicle-number"><%= row.CAR %></td>
                    <td class="container-number"><%= row.CUNT %></td>
                    <td class="summary"><%= row.OUT %></td>
                    <td class="transmission-error"><%= row.COPINO_OUT %></td>
                    <td class="gate-out"><%= row.GATE_OUT %></td>
                    <td class="get-off"><%= row.IN %></td>
                    <td class="transmission-error-2"><%= row.COPINO_IN %></td>
                    <td class="gate-in"><%= row.GATE_IN %></td>
                </tr>
                <% }); %> 
            </table>
        </div>
    </section>
            

<!-- TABLE -->
<section id="home" class="min-h-100vh flex justify-start items-center">
    <div class="mx-5 md-mx-l5">
        <div>
            <h1 class="white fs-l3 lh-2 md-fs-xl1 md-lh-1 fw-900 "> <br /> </h1>
    </div>
</section>

<style>
    .custom-table-container {
        background-color: black; /* 배경색 검정 */
        padding: 20px; /* 여백 추가 */
        border-radius: 10px; /* 테두리 둥글게 */
        margin: 50px 0; /* 상단과 하단 마진으로 중앙 위치 조정 */
    }

    .custom-table {
        width: 100%; /* 테이블 너비 최대로 */
        border-collapse: collapse; /* 테이블 경계선 겹치게 */
        table-layout: fixed; /* 열 너비 고정 */
    }

    .custom-table th, .custom-table td {
        border: 1px solid limegreen; /* 셀 경계선 색상 */
        padding: 8px; /* 셀 내부 여백 */
        text-align: center; /* 텍스트 중앙 정렬 */
        color: limegreen; /* 기본 텍스트 색상 */
    }

    /* 그룹 1 텍스트 색상 */
    .custom-table th:nth-child(-n+2), .custom-table td:nth-child(-n+2) {
        color: #AAF255; /* 그룹 1 텍스트 색상 */
    }

    /* 그룹 2 텍스트 색상 */
    .custom-table th:nth-child(n+3):nth-child(-n+5), .custom-table td:nth-child(n+3):nth-child(-n+5) {
        color: #FFD700; /* 그룹 2 텍스트 색상 */
    }

    /* 그룹 3 텍스트 색상 */
    .custom-table th:nth-child(n+6), .custom-table td:nth-child(n+6) {
        color: #FF4500; /* 그룹 3 텍스트 색상 */
    }
</style>

    <!-- footer -->
    <footer class="p-5 md-p-l5 bg-indigo-lightest-10">
        <div class="flex flex-wrap">
            <div class="md-w-25pc mb-10">
                <img src="assets/images/logo.png" class="w-l5" alt="">
                <div class="white opacity-70 fs-s2 mt-4 md-pr-10">
                    <p>해당 프로그램은 개인 이용 프로그램이며 상업적 이용시 법적으로 문제가 될 수 있음을 미리 알려드립니다.</p>
                    <br>
                    <p>COPINO CHECK PROGRAM.</p>
                </div>
            </div>
            <div class="w-100pc md-w-50pc">
                <div class="flex justify-around">
                    <div class="w-33pc md-px-10 mb-10">
                       
        
                <div class="flex justify-around my-8">
                    <a href="#" class="relative p-5 bg-indigo br-round white hover-scale-up-1 ease-400"><i
                            data-feather="twitter" class="absolute-center h-4"></i></a>
                    <a href="#" class="relative p-5 bg-indigo br-round white hover-scale-up-1 ease-400"><i
                            data-feather="facebook" class="absolute-center h-4"></i></a>
                    <a href="#" class="relative p-5 bg-indigo br-round white hover-scale-up-1 ease-400"><i
                            data-feather="instagram" class="absolute-center h-4"></i></a>
                </div>
            </div>
        </div>
    </footer>

    </div>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://unpkg.com/feather-icons"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/cferdinandi/smooth-scroll@15.0.0/dist/smooth-scroll.polyfills.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="c:\Users\ehwo2\OneDrive\바탕 화면\joweb\joweb\script.js"></script>
    <script>
        // 페이지가 로드될 때 실행되는 함수
        $(document).ready(function() {
            // 5초마다 실행될 함수를 setInterval을 사용하여 설정
            setInterval(function() {
                // AJAX를 사용하여 서버로부터 데이터를 요청
                $.ajax({
                    url: '/TS', // 데이터를 가져올 서버의 주소
                    type: 'GET', // HTTP 요청 방식
                    success: function(data) {
                        // 데이터 요청이 성공하면 실행되는 부분
                        // 여기서 'data'는 서버로부터 받은 데이터입니다.
                        // 받은 데이터로 테이블을 업데이트하는 코드를 작성하세요.
                        // 예: $('#ts').html(data);
                    },
                    error: function() {
                        // 데이터 요청이 실패하면 실행되는 부분
                        console.error('데이터를 불러오는데 실패했습니다.');
                    }
                });
            }, 5000); // 5000밀리초(5초)마다 함수 실행
        });
        </script>
</body>

</html>
