<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>주식회사 이지스</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/shorthandcss@1.1.1/dist/shorthand.min.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Muli:200,300,400,500,600,700,800,900&display=swap" />
    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick.min.css" />
    <link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css" />
</head>

<body class="bg-black muli">
    <nav class="w-100pc flex flex-column md-flex-row md-px-10 py-5 bg-black">
        <div class="flex justify-between">
            <a href="#" class="flex items-center p-2 mr-4 no-underline">
            </a>
            <a data-toggle="toggle-nav" data-target="#nav-items" href="#"
                class="flex items-center ml-auto md-hidden indigo-lighter opacity-50 hover-opacity-100 ease-300 p-1 m-3">
                <i data-feather="menu"></i>
            </a>
        </div>
        
    </div>
    <div id="nav-items" class="flex sm-w-100pc flex-column md-flex md-flex-row md-justify-end items-center">
        <% if (['manage', 'employee', 'company_driver'].includes(user.role)) { %>
            <a href="deliver" class="nav-link">배차관리</a>
        <% } %>
        <% if (['manage', 'employee', 'driver', 'company_driver', 'delivery'].includes(user.role)) { %>
            <a href="ezicon" class="nav-link">이지콘 - 북항 보관소</a>
            <a href="dudong" class="nav-link">두동 - 두동 보관소</a>
        <% } %>
        <% if (['manage', 'employee', 'driver', 'company_driver', 'delivery'].includes(user.role)) { %>
            <a href="uam" class="nav-link">우암CY</a>
        <% } %>
        <% if (['manage', 'employee'].includes(user.role)) { %>
            <a href="copino_sin" class="nav-link">COPINO CHECK(신항)</a>
        <% } %>
        <% if (['manage', 'employee'].includes(user.role)) { %>
            <a href="copino_bok" class="nav-link">COPINO CHECK(북항)</a>
        <% } %>
        <% if (user.role === 'manage') { %>
            <a href="manager" class="nav-link">관리자 페이지</a>
        <% } %>
        <% if (user) { %>
            <a href="my" class="nav-link">내 정보</a>
        <% } %>
        <a href="/" class="nav-link">로그아웃</a>
    </div>

</nav>
    </nav>

    <main class="auth-section">
        <div class="auth-container">
            <h1 style="text-align: center; color: white; font-size: 24px;">이지콘 CY에 오신걸 환영합니다</h1>
            <div class="button-group">
                <button class="btn-action btn-load" data-modal="modal-load">상차접수</button>
                <button class="btn-action btn-unload" data-modal="modal-unload">하차접수</button>
                <button class="btn-action btn-location" data-modal="modal-location">하차지 조회</button>
                <button class="btn-action btn-yard" data-modal="modal-yard">야드현황</button>
                <button class="btn-action btn-container" data-modal="modal-container">컨테이너 조회</button>
            </div>
        </div>
    </main>
    

    <!-- 각 모달에 정확한 id 설정 -->
    <div id="modal-load" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>상차접수</h2>
            <hr class="modal-divider">
            <div class="modal-buttons">
                <button id="container-search" class="search-button">컨테이너 번호</button>
                <button id="order-search" class="search-button">상차오더 번호</button>
            </div>
            <div id="search-container" style="display: none;">
                <input type="text" id="container-number" placeholder="컨테이너 번호 (7자리)">
                <button id="container-submit" class="modal-btn">검색</button>
            </div>
            <div id="search-order" style="display: none;">
                <input type="text" id="order-number" placeholder="상차오더 번호 (3자리)">
                <button id="order-submit" class="modal-btn">검색</button>
            </div>
            <p id="result"></p>
            <p id="message"></p>
            <div class="center-button">
                <button id="submit-container-order" class="search-button" style="display:none;">상차접수 (컨테이너)</button>
                <button id="submit-onorder" class="search-button" style="display:none;">상차접수 (상차오더)</button>
            </div>
        </div>
    </div>
    
    <!-- 각 모달에 정확한 id 설정 -->
    <div id="modal-unload" class="modal">
        <div class="modal-content">
            <span class="close" id="close-unload">&times;</span>
            <h2>하차접수</h2>
            <hr class="modal-divider">
            <div class="modal-buttons">
                <button id="container-search-unload" class="search-button">컨테이너 번호</button>
            </div>
            <div id="search-container-unload" style="display: none;">
                <input type="text" id="container-number-unload" placeholder="컨테이너 번호 (7자리)">
                <button id="container-submit-unload" class="modal-btn">검색</button>
            </div>
            <p id="result-unload"></p>
            <p id="message-unload"></p>
            <div class="center-button">
                <button id="submit-container-order-unload" class="search-button" style="display:none;">하차접수 (컨테이너)</button>
            </div>
        </div>
    </div>
    
    <div id="modal-location" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>하차지 조회</h2>
            
            <!-- 컨테이너 번호 검색 영역 -->
            <div class="search-section">
                <label for="location-container-number">컨테이너 번호</label>
                <div style="display: flex; align-items: center;">  <!-- 입력란과 지우기 버튼을 가로로 나란히 배치 -->
                    <input type="text" id="location-container-number" class="search-input" placeholder="컨테이너 번호 입력">
                    <button id="location-clear-button" class="clear-button">지우기</button>  <!-- 지우기 버튼 추가 -->
                </div>
                <button id="location-search-button" class="search-button" style="margin-top: 10px; width: 100%;">검색</button>  <!-- 검색 버튼을 하단에 배치 -->
            </div>
            
            <!-- 하차지 결과 표시 영역 -->
            <div class="result-section">
                <label>하차지</label>
                <div id="location-unload-result" class="result-display">결과가 여기에 표시됩니다.</div>
            </div>
        </div>
    </div>
    
    <div id="modal-yard" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>야드현황 정보</h2>
            <p>준비중입니다.</p>
        </div>
    </div>
    
    <div id="modal-container" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>컨테이너 조회</h2>
            <p>준비중입니다.</p>
        </div>
    </div>

    <footer class="p-5 md-p-l5 bg-indigo-lightest-10">
        <div class="flex flex-wrap">
            <div class="md-w-25pc mb-10">
                <img src="assets/images/logo.png" class="w-l5" alt="">
                <div class="white opacity-70 fs-s2 mt-4 md-pr-10">
                    <p>해당 프로그램은 개인 이용 프로그램이며 상업적 이용 시 법적으로 문제가 될 수 있음을 미리 알려드립니다.</p>
                    <br>
                    <p>COPINO CHECK PROGRAM.</p>
                </div>
            </div>
            <div class="w-100pc md-w-50pc">
                <div class="flex justify-around">
                    <div class="w-33pc md-px-10 mb-10">
                       
        
                <div class="flex justify-around my-8">
                    <a href="#" class="relative p-5 bg-indigo br-round white hover-scale-up-1 ease-400"><i
                            data-feather="twitter" class="absolute-center h-4"></i></a>
                    <a href="#" class="relative p-5 bg-indigo br-round white hover-scale-up-1 ease-400"><i
                            data-feather="facebook" class="absolute-center h-4"></i></a>
                    <a href="#" class="relative p-5 bg-indigo br-round white hover-scale-up-1 ease-400"><i
                            data-feather="instagram" class="absolute-center h-4"></i></a>
                </div>
            </div>
        </div>
    </footer>

    </div>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://unpkg.com/feather-icons"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/cferdinandi/smooth-scroll@15.0.0/dist/smooth-scroll.polyfills.min.js"></script>
    <script src="assets/js/script.js"></script>
</body>

</html>
<style>

/* 기본 스타일 */
.auth-section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 20px;
}

.auth-container {
    display: flex;
    flex-direction: column;
    background: #2e2e2e; /* 어두운 회색 배경색 */
    padding: 30px;
    border-radius: 8px;
    max-width: 620px;
    width: 100%; /* 변경 */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 그림자 효과 추가 */
}

.button-group {
    display: flex;
    flex-direction: column;
    gap: 50px;
}

@media only screen and (max-width: 480px) {
    .auth-container {
        padding: 10px; /* 패딩을 줄임 */
        max-width: 70%; /* 최대 너비를 조정 */
        font-size: 14px;
        margin: 0 auto; /* 가운데 정렬 */
    }

    .button-group {
        display: flex;
        flex-direction: column;
        gap: 10px; /* 간격을 줄임 */
        align-items: center; /* 버튼 그룹을 세로 중앙 정렬 */
    }

    .btn-action.btn-load,
    .btn-action.btn-unload,
    .btn-action.btn-location,
    .btn-action.btn-yard,
    .btn-action.btn-container {
        width: 90%; /* 버튼을 화면 너비에 맞게 설정 */
        padding: 20px; /* 내부 여백 설정 */
        font-size: 20px; /* 버튼 텍스트 크기 조정 */
        box-sizing: border-box; /* 내부 여백과 테두리를 포함한 전체 크기로 설정 */
    }
}



.login-container, .signup-container {
    width: 100%; /* 폼의 너비를 컨테이너 너비와 일치시킴 */
    padding: 15px;
    margin-bottom: 20px; /* 로그인 및 회원 가입 폼 간의 간격 */
}

.input-group {
    margin-bottom: 15px; /* 입력 필드 간 간격 조정 */
}

.input-style, .btn-login, .btn-signup {
    width: 100%;
    padding: 12px; /* 입력 필드와 버튼의 패딩 동일하게 조정 */
    font-size: 16px;
    border-radius: 4px; /* 모서리 둥글게 처리 */
    border: 1px solid #ddd; /* 테두리 설정 */
    margin: 5px 0; /* 입력 필드 위아래 간격 */
}

.btn-login, .btn-signup {
    background-color: #5C67F2;
    color: white;
    cursor: pointer;
    transition: background-color 0.3s;
}

.btn-login:hover, .btn-signup:hover {
    background-color: #5058E6;
}

.btn-signup {
    background-color: #4CAF50; /* 회원 가입 버튼 색상 변경 */
}

button[type="submit"] {
    padding: 15px 30px; /* 버튼의 패딩을 조정하여 크기를 변경합니다. */
    font-size: 20px; /* 버튼의 글꼴 크기를 조정합니다. */
}


.signupFormModal {
    color: #fff; /* 텍스트 색상을 흰색으로 설정 */
}

.signupFormModal .input-style {
    padding: 30px; /* 입력 필드의 내부 여백을 늘립니다. */
    font-size: 24px; /* 입력 필드의 폰트 크기를 늘립니다. */
    width: 500%; /* 입력 필드의 너비를 부모 요소의 너비에 맞게 설정합니다. */
    border-radius: 4px; /* 입력 필드의 모서리를 둥글게 처리합니다. */
    border: 1px solid #ddd; /* 테두리 스타일을 설정합니다. */
    margin: 5px 0; /* 입력 필드의 위아래 여백을 설정합니다. */
}

.signupFormModal .input-group label {
    font-size: 24px; /* 이름, 아이디 등의 텍스트 크기를 두 배로 증가시킵니다. */
}

.signupFormModal .input-group input {
    padding: 15px; /* 입력 필드의 패딩을 늘려 크기를 키웁니다. */
    font-size: 20px; /* 입력 필드의 글꼴 크기를 늘려 텍스트를 키웁니다. */
    width: 100%; /* 부모 요소에 맞게 입력 필드의 너비를 설정합니다. */
}



.input-group {
    margin-bottom: 24px; /* 입력 필드 간 간격을 조금 더 넓게 설정 */
}

label {
    display: block; /* 라벨을 블록 요소로 설정하여 한 줄에 하나씩 표시 */
    margin-bottom: 10px; /* 라벨 간 간격을 조금 더 넓게 설정 */
}

.input-style {
    padding: 15px; /* 입력 필드 패딩 증가 */
    font-size: 18px; /* 입력 필드 폰트 크기 증가 */
    width: 100%; /* 입력 필드 너비를 100%로 설정하여 부모 너비에 맞춤 */
    border-radius: 4px; /* 입력 필드 모서리를 둥글게 설정 */
    border: 1px solid #ddd; /* 테두리 스타일 설정 */
    margin: 5px 0; /* 입력 필드 위아래 여백 설정 */
}

.modal.visible {
    opacity: 1;
    visibility: visible;
}






body {
    font-family: 'Muli', Arial, sans-serif;
}







.btn-action {
    width: 200%;          /* 너비를 최대화 */
    max-width: 550px;     /* 최대 너비를 설정 */
    padding: 20px;        /* 버튼 크기를 늘리기 위한 패딩 */
    font-size: 35px;      /* 텍스트 크기를 키움 */
    font-weight: bold;    /* 텍스트를 굵게 설정 */
    border-radius: 8px;   /* 모서리를 둥글게 처리 */
    border: 5px solid #333; /* 어두운 테두리 */
    cursor: pointer;      /* 포인터 커서 */
    transition: background-color 0.3s ease, transform 0.1s ease;
}

.btn-load {
    background-color: #3C44B1;  /* 더 어두운 색상 */
    color: white;
}

.btn-unload {
    background-color: #2E7C31;  /* 더 어두운 색상 */
    color: white;
}

.btn-location {
    background-color: #D17942;  /* 더 어두운 색상 */
    color: white;
}

.btn-yard {
    background-color: #B98A30;  /* 더 어두운 색상 */
    color: white;
}

.btn-container {
    background-color: #397EA1;  /* 더 어두운 색상 */
    color: white;
}

.btn-action:hover {
    filter: brightness(75%);  /* 밝기를 줄여 어두운 효과 */
    transform: scale(1.05);   /* 살짝 확대되는 효과 */
}







/* 모달 컨테이너 */
.modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    max-width: 600px; /* 큰 화면에서는 최대 600px까지 */
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    z-index: 1000;
    padding: 1.5em;
    display: none; /* 처음에는 숨김 */
}

/* 작은 화면을 위한 미디어 쿼리 */
@media (max-width: 480px) {
    .modal {
        width: 90%; /* 모바일 화면에서는 더 작은 크기로 */
        padding: 1em; /* 내 내용도 적당히 조정 */
    }
}


/* 모달 창 내용 */
.modal-content {
    background-color: #4a4a4a; /* 모달 내부 배경색 */
    position: fixed; /* 화면 전체에 고정 */
    top: 50%; /* 화면 중앙에 위치하기 위해 50%로 설정 */
    left: 50%; /* 수평 중앙에 위치 */
    transform: translate(-50%, -50%); /* 중앙 정렬 */
    padding:30px;
    border-radius: 10px;
    width: 80%;
    max-width: 500px;
    color: white; /* 글자 색상 */
    font-weight: bold;
    text-align: center;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.5); /* 그림자 효과 */
}

/* 검색 및 결과 섹션 */
.search-section, .result-section {
    margin: 30px 0; /* 섹션 간 간격을 더 크게 */
    padding: 10px; /* 패딩을 늘려 전체 크기 증가 */
    border: 1px solid #ddd;
    border-radius: 10px;
    background-color: #5a5a5a;
    text-align: center; /* 중앙 정렬 */
    font-size: 10px; /* 섹션의 기본 글자 크기를 두 배로 키움 */
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif; /* 굵고 귀여운 글씨체 */
    font-weight: bold; /* 글씨 굵게 */
}

/* 레이블 (컨테이너 번호, 하차지) */
.search-section label,
.result-section label {
    display: block; /* 블록 요소로 설정해 중앙 정렬 가능하게 함 */
    text-align: center; /* 중앙 정렬 */
    font-size: 25px; /* 레이블의 폰트 크기를 크게 */
    margin-bottom: 15px;
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
}

.search-input {
    width: 90%; /* 검색창의 너비를 증가 */
    padding: 20px; /* 검색창의 패딩을 늘려 크기 증가 */
    font-size: 20px; /* 글자 크기 두 배로 증가 */
    border-radius: 10px;
    border: 1px solid #ccc;
    margin-right: 20px;
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
}

.search-button {
    padding: 15px 10px; /* 버튼 크기를 두 배로 늘림 */
    font-size: 36px; /* 버튼의 글자 크기 두 배로 증가 */
    border: none;
    border-radius: 10px;
    background-color: #5C67F2;
    color: white;
    cursor: pointer;
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
}

.search-button:hover {
    background-color: #5058E6;
}

.result-display {
    padding: 30px; /* 결과 표시창의 패딩을 두 배로 늘림 */
    background-color: #333;
    border-radius: 10px;
    min-height: 80px; /* 최소 높이 두 배로 증가 */
    font-size: 36px; /* 글자 크기 두 배로 증가 */
    color: #ddd;
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
}

/* 미디어 쿼리: 모바일 반응형 */
@media (max-width: 480px) {
    .modal-content {
        width: 90%; /* 작은 화면에서는 크기를 90%로 */
        max-width: 300px; /* 최대 크기 제한 */
        padding: 15px; /* 패딩 축소 */
    }

    .search-section, .result-section {
        padding: 8px;
        font-size: 10px;
    }

    .search-input {
        width: 90%; /* 너비를 90%로 확대 */
        padding: 12px;
        font-size: 14px;
    }

    .search-button {
        padding: 10px 20px;
        font-size: 14px;
    }

    .result-display {
        padding: 10px;
        font-size: 25px;
    }
}



.nav-link {
    font-size: 1.4em; /* 글꼴 크기 키우기 */
    margin: 0.5em;
    padding: 0.5em 1em;
    color: #FFFFFF; /* 텍스트 색상을 하얀색으로 설정 */
    text-decoration: none;
    transition: font-size 0.2s ease-in-out;
    font-family: "Helvetica Neue", Arial, sans-serif; /* 둥글둥글한 글꼴 설정 */
    font-weight: bold; /* 굵은체로 설정 */
    border-radius: 10px; /* 요소의 모서리를 둥글게 만듦 */
}

.nav-link:hover {
    text-decoration: underline;
}


/* 작은 화면을 위한 미디어 쿼리 */
@media (max-width: 400px) {
    #nav-items {
        display: flex; /* 가로 방향 배치 */
        flex-direction: column; /* 메뉴 항목을 세로로 배치 */
        align-items: center; /* 가운데 정렬 */
        gap: 10px; /* 항목 사이 간격 */
    }

    .nav-link {
        font-size: 1.2em; /* 글씨 크기를 작게 조정 */
        margin: 0.5em 0; /* 좀 더 작은 여백 설정 */
        padding: 0.3em 0.6em; /* 좀 더 작은 내부 여백 설정 */
    }
}


.clear-button {
    padding: 15px 20px; /* 버튼의 패딩 */
    font-size: 14px; /* 글자 크기 */
    margin-left: 10px; /* 검색 버튼과의 간격 */
    background-color: #ff6347; /* 버튼 배경색 */
    color: white; /* 텍스트 색상 */
    border: none;
    border-radius: 5px; /* 모서리 둥글기 */
    cursor: pointer; /* 마우스 커서 */
}

.clear-button:hover {
    background-color: #e5533d; /* 호버 시 배경색 */
}

@media (max-width: 480px) {
    .clear-button {
        padding: 5px 10px; /* 모바일에서는 버튼의 패딩을 줄임 */
        font-size: 12px; /* 모바일에서는 글자 크기를 줄임 */
        margin-left: 5px; /* 모바일에서는 버튼 사이 간격을 줄임 */
    }
}


/* 상차접수 CSS */

.modal-divider {
    border: 0;
    height: 1px;
    background: #fff;
    margin: 20px 0;
}

/* 상차접수 모달 버튼 정렬 */
.modal-buttons {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: 20px;
}


.modal-san-btn {
            background-color: #4CAF50;
            color: white;
            padding: 20px 40px; /* 패딩을 늘려 버튼 크기를 키움 */
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-size: 20px; /* 버튼 글자 크기 증가 */
            font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
            font-weight: bold;
        }

.modal-san-btn:hover {
    background-color: #45a049;
}

.modal-san {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
    display: flex;
    align-items: center;
    justify-content: center;
}

.modal-san-content {
    background-color: #fefefe;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 600px; /* 최대 너비 증가 */
    border-radius: 10px;
    text-align: center;
}

.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

#search-container,
#search-order {
    margin-top: 20px;
}

#search-container input,
#search-order input {
    padding: 20px; /* 패딩 증가 */
    margin-right: 10px;
    width: calc(100% - 140px); /* 패딩 증가에 따른 너비 조정 */
    font-size: 20px; /* 글자 크기 증가 */
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
    border-radius: 10px;
    border: 1px solid #ccc;
}

#search-container button,
#search-order button {
    padding: 20px 40px; /* 패딩 증가 */
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    font-size: 20px; /* 글자 크기 증가 */
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
}

#search-container button:hover,
#search-order button:hover {
    background-color: #45a049;
}

#result {
    margin-top: 20px;
    color: red;
    font-size: 20px; /* 글자 크기 증가 */
}

.btn-action {
    width: 200%;
    max-width: 550px;
    padding: 20px;
    font-size: 35px;
    font-weight: bold;
    border-radius: 8px;
    border: 5px solid #333;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.1s ease;
}

.btn-load {
    background-color: #3C44B1;
    color: white;
}

.btn-unload {
    background-color: #2E7C31;
    color: white;
}

.btn-location {
    background-color: #D17942;
    color: white;
}

.btn-yard {
    background-color: #B98A30;
    color: white;
}

.btn-container {
    background-color: #397EA1;
    color: white;
}

.btn-action:hover {
    filter: brightness(75%);
    transform: scale(1.05);
}

.search-section, .result-section {
    margin: 30px 0;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 10px;
    background-color: #5a5a5a;
    text-align: center;
    font-size: 20px;
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
}

.search-section label,
.result-section label {
    display: block;
    text-align: center;
    font-size: 25px;
    margin-bottom: 15px;
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
}

.search-input {
    width: 90%;
    padding: 20px;
    font-size: 20px;
    border-radius: 10px;
    border: 1px solid #ccc;
    margin-right: 20px;
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
}

.search-button {
    padding: 20px;
    font-size: 20px;
    border: none;
    border-radius: 10px;
    background-color: #5C67F2;
    color: white;
    cursor: pointer;
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
}

.search-button:hover {
    background-color: #5058E6;
}

.result-display {
    padding: 20px;
    background-color: #333;
    border-radius: 10px;
    min-height: 80px;
    font-size: 20px;
    color: #ddd;
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
}

.center-button {
    display: flex;
    justify-content: center; /* 수평 중앙 정렬 */
    margin-top: 10px; /* 버튼과 위 요소 사이의 간격 */
}

/* 상차접수 */

@media (max-width: 480px) {
    #container-submit, #order-submit {
        font-size: 8px; /* 버튼 텍스트 크기 조정 */
        padding: 5px 5px; /* 버튼 패딩 조정 */
    }

    #container-number, #order-number {
        width: 100%; /* 입력 필드 너비를 100%로 설정 */
        font-size: 14px; /* 입력 필드 텍스트 크기 조정 */
        padding: 12px; /* 입력 필드 패딩 조정 */
    }
}

/* 하차접수 모달 스타일 추가 */

/* 모달 창 스타일 */
#modal-unload {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    max-width: 600px;
    background-color: white;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    z-index: 1000;
    padding: 1.5em;
    display: none; /* 처음에는 숨김 */
}

/* 모달 창 내용 스타일 */
#modal-unload .modal-content {
    background-color: #4a4a4a; /* 모달 내부 배경색 */
    padding: 30px;
    border-radius: 10px;
    color: white; /* 글자 색상 */
    font-weight: bold;
    text-align: center;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.5); /* 그림자 효과 */
}

/* 닫기 버튼 스타일 */
#modal-unload .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

#modal-unload .close:hover,
#modal-unload .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

/* 모달 구분선 스타일 */
#modal-unload .modal-divider {
    border: 0;
    height: 1px;
    background: #fff;
    margin: 20px 0;
}

/* 모달 버튼 그룹 스타일 */
#modal-unload .modal-buttons {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: 20px;
}

/* 모달 내 검색 섹션 스타일 */
#modal-unload #search-container-unload {
    margin-top: 20px;
}

#modal-unload #search-container-unload input {
    padding: 20px; /* 패딩 증가 */
    margin-right: 10px;
    width: calc(100% - 140px); /* 패딩 증가에 따른 너비 조정 */
    font-size: 20px; /* 글자 크기 증가 */
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
    border-radius: 10px;
    border: 1px solid #ccc;
}

#modal-unload #search-container-unload button {
    padding: 20px 40px; /* 패딩 증가 */
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    font-size: 20px; /* 글자 크기 증가 */
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
}

#modal-unload #search-container-unload button:hover {
    background-color: #45a049;
}

/* 검색 결과 및 메시지 스타일 */
#modal-unload #result-unload {
    margin-top: 20px;
    color: red;
    font-size: 20px; /* 글자 크기 증가 */
}

#modal-unload #message-unload {
    margin-top: 10px;
    color: white;
    font-size: 20px; /* 글자 크기 증가 */
}

/* 하차접수 버튼 스타일 */
#modal-unload .center-button {
    display: flex;
    justify-content: center; /* 수평 중앙 정렬 */
    margin-top: 10px; /* 버튼과 위 요소 사이의 간격 */
}

#modal-unload .search-button {
    padding: 20px;
    font-size: 20px;
    border: none;
    border-radius: 10px;
    background-color: #5C67F2;
    color: white;
    cursor: pointer;
    font-family: 'Arial Rounded MT Bold', Verdana, sans-serif;
    font-weight: bold;
}

#modal-unload .search-button:hover {
    background-color: #5058E6;
}

/* 모바일 반응형 스타일 */
@media (max-width: 480px) {
    #modal-unload {
        width: 90%; /* 작은 화면에서는 더 작은 크기로 */
        padding: 1em; /* 내 내용도 적당히 조정 */
    }

    #modal-unload .modal-content {
        width: 90%; /* 작은 화면에서는 크기를 90%로 */
        max-width: 300px; /* 최대 크기 제한 */
        padding: 15px; /* 패딩 축소 */
    }

    #modal-unload #search-container-unload input {
        width: 100%; /* 너비를 100%로 확대 */
        padding: 12px;
        font-size: 14px;
    }

    #modal-unload #search-container-unload button {
        padding: 10px 20px;
        font-size: 14px;
    }

    #modal-unload #result-unload {
        padding: 10px;
        font-size: 14px;
    }
}


</style>



<!-- 스크립트 추가 -->
<script>


// 하차지 조회---------------------------------------------------------------------------------------------------------------------------------------------ㅍ


document.addEventListener("DOMContentLoaded", function() {
    var modals = document.querySelectorAll(".modal");
    var closeButtons = document.querySelectorAll(".close");

    // 각 버튼에 클릭 이벤트 추가
    document.querySelectorAll("[data-modal]").forEach(button => {
        button.addEventListener("click", function() {
            var modalId = this.dataset.modal;
            var modal = document.getElementById(modalId);

            // 모든 모달 닫기
            modals.forEach(m => {
                m.style.display = "none";
            });

            // 선택한 모달만 열기
            if (modal) {
                modal.style.display = "block";

                // 모달이 열릴 때마다 입력 필드와 결과 초기화
                if (modalId === "modal-location") {
                    document.getElementById('location-container-number').value = ''; // 입력 필드 초기화
                    document.getElementById('location-unload-result').innerText = '결과가 여기에 표시됩니다.'; // 결과 초기화
                }
            }
        });
    });

    // 각 닫기 버튼에 클릭 이벤트 추가
    closeButtons.forEach(button => {
        button.addEventListener("click", function() {
            this.closest(".modal").style.display = "none";
        });
    });

    // 모달 외부 클릭 시 모달 닫기
    window.addEventListener("click", function(event) {
        modals.forEach(modal => {
            if (event.target === modal) {
                modal.style.display = "none";
            }
        });
    });
});

// location-container-number 검색 버튼 클릭 시 이벤트 처리
document.getElementById('location-search-button').addEventListener('click', function () {
    // 입력된 컨테이너 번호 가져오기
    const containerNumber = document.getElementById('location-container-number').value.trim();

    // 컨테이너 번호가 유효한지 확인
    if (containerNumber.length < 7) {
        alert('컨테이너 번호는 7자리 이상이어야 합니다.');
        return;
    }

    // 서버로 컨테이너 번호를 전송하여 하차지 조회
    fetch('/api/search-another', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ containerNumber })
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(error => { throw new Error(error.error); });
        }
        return response.json();
    })
    .then(data => {
        // 서버 응답으로 받은 하차지 정보를 화면에 표시
        document.getElementById('location-unload-result').innerText = `${data.m_port}`;
    })
    .catch(error => {
        console.error('데이터 가져오기 실패:', error);
        document.getElementById('location-unload-result').innerText = '결과를 찾을 수 없습니다.';
    });
});

// location-container-number input 요소에 이벤트 리스너 추가
document.getElementById('location-container-number').addEventListener('input', function() {
    // 현재 입력된 값을 가져옵니다.
    const currentValue = this.value;
    // 대문자로 변환하여 다시 입력란에 설정합니다.
    this.value = currentValue.toUpperCase();
});

// location-clear-button 버튼 클릭 시 입력 필드 초기화
document.getElementById('location-clear-button').addEventListener('click', function() {
    document.getElementById('location-container-number').value = '';  // 입력 필드 초기화
});

// 매 15분마다 서버에 세션 갱신 요청을 보냄
document.addEventListener('DOMContentLoaded', function() {
    setInterval(() => {
        fetch('/keep-session-alive')
            .then(response => console.log('Session refreshed'))
            .catch(err => console.log('Error refreshing session', err));
    }, 15 * 60 * 1000);  // 900000 milliseconds
});



            
// 상차접수--------------------------------------------------------------------------------------------


var modal = document.getElementById("modal-load");
var span = document.getElementsByClassName("close")[0];
var containerSearchBtn = document.getElementById("container-search");
var orderSearchBtn = document.getElementById("order-search");
var searchContainer = document.getElementById("search-container");
var searchOrder = document.getElementById("search-order");
var containerSubmitBtn = document.getElementById("container-submit");
var orderSubmitBtn = document.getElementById("order-submit");
var submitContainerOrderBtn = document.getElementById("submit-container-order");
var submitOnOrderBtn = document.getElementById("submit-onorder");

containerSearchBtn.onclick = function() {
    searchContainer.style.display = "block";
    searchOrder.style.display = "none";
    document.getElementById("result").innerText = ''; // 검색 전 결과 초기화
    document.getElementById("message").innerText = ''; // 검색 전 메시지 초기화
    submitContainerOrderBtn.style.display = "none"; // 상차접수 (컨테이너) 버튼 숨기기
    submitOnOrderBtn.style.display = "none"; // 상차접수 (상차오더) 버튼 숨기기
}

orderSearchBtn.onclick = function() {
    searchContainer.style.display = "none";
    searchOrder.style.display = "block";
    document.getElementById("result").innerText = ''; // 검색 전 결과 초기화
    document.getElementById("message").innerText = ''; // 검색 전 메시지 초기화
    submitContainerOrderBtn.style.display = "none"; // 상차접수 (컨테이너) 버튼 숨기기
    submitOnOrderBtn.style.display = "none"; // 상차접수 (상차오더) 버튼 숨기기
}

span.onclick = function() {
    modal.style.display = "none";
    document.getElementById("result").innerText = ''; // 창이 닫힐 때 결과 초기화
    document.getElementById("message").innerText = ''; // 창이 닫힐 때 메시지 초기화
}

window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = "none";
        document.getElementById("result").innerText = ''; // 창이 닫힐 때 결과 초기화
        document.getElementById("message").innerText = ''; // 창이 닫힐 때 메시지 초기화
    }
}

let containerDetails = {};

containerSubmitBtn.onclick = function() {
    var containerNumber = document.getElementById("container-number").value.trim();

    fetch('/search-container', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ containerNumber: containerNumber }),
    })
    .then(response => response.json())
    .then(data => {
        var resultText = '';
        var messageText = '';
        if (data.message) {
            resultText = data.message;
        } else if (data.length > 0) {
            containerDetails = data[0]; // 첫 번째 결과를 저장
            resultText = `${containerDetails.CON_NO} : ${containerDetails.LOC}`;  // CON_NO : LOC 형식으로 출력
            submitContainerOrderBtn.style.display = "block";
        } else {
            resultText = 'LOC 정보를 찾을 수 없습니다.';
        }
        document.getElementById("result").innerText = resultText;
        document.getElementById("message").innerText = messageText; // 메시지 초기화
    })
    .catch((error) => {
        console.error('Error:', error);
        document.getElementById("result").innerText = '서버 요청 중 오류가 발생했습니다.';
        document.getElementById("message").innerText = ''; // 오류 발생 시 메시지 초기화
    });
}

submitContainerOrderBtn.onclick = function() {
    if (!containerDetails.CON_NO) {
        alert('CON_NO 정보가 없습니다.');
        return;
    }

    fetch('/insert-order', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ CON_NO: containerDetails.CON_NO }), // CON_NO를 서버로 전송
    })
    .then(response => response.json())
    .then(data => {
        var messageText = '';
        if (data.status === 'exists') {
            messageText = data.message;
        } else if (data.message) {
            messageText = data.message;
            containerDetails.CON_NO = data.CON_NO; // 업데이트된 CON_NO 저장
            containerDetails.LOC = data.LOC; // 업데이트된 LOC 저장
            document.getElementById("result").innerText = `${data.CON_NO} : ${data.LOC}`;  // CON_NO : LOC 형식으로 출력
            // 모달을 닫지 않음
        }
        document.getElementById("message").innerText = messageText;
    })
    .catch((error) => {
        console.error('Error:', error);
        document.getElementById("message").innerText = '서버 요청 중 오류가 발생했습니다.';
    });
}

orderSubmitBtn.onclick = function() {
    var orderNumber = document.getElementById("order-number").value.trim();

    fetch('/search-onorder', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ onorder: orderNumber }),
    })
    .then(response => response.json())
    .then(data => {
        var resultText = '';
        var messageText = '';
        if (data.message) {
            resultText = data.message;
        } else if (data.length > 0) {
            containerDetails = data[0]; // 첫 번째 결과를 저장
            resultText = `${containerDetails.S_NO}`;  // S_NO 형식으로 출력
            submitOnOrderBtn.style.display = "block";
        } else {
            resultText = '등록된 상차오더가 없습니다.';
        }
        document.getElementById("result").innerText = resultText;
        document.getElementById("message").innerText = messageText; // 메시지 초기화
    })
    .catch((error) => {
        console.error('Error:', error);
        document.getElementById("result").innerText = '서버 요청 중 오류가 발생했습니다.';
        document.getElementById("message").innerText = ''; // 오류 발생 시 메시지 초기화
    });
}

submitOnOrderBtn.onclick = function() {
    if (!containerDetails.S_NO) {
        alert('S_NO 정보가 없습니다.');
        return;
    }

    fetch('/insert-onorder', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ S_NO: containerDetails.S_NO }), // S_NO를 서버로 전송
    })
    .then(response => response.json())
    .then(data => {
        var messageText = '';
        if (data.status === 'exists') {
            messageText = data.message;
        } else if (data.message) {
            messageText = data.message;
            containerDetails.CON_NO = data.CON_NO; // 업데이트된 CON_NO 저장
            containerDetails.LOC = data.LOC; // 업데이트된 LOC 저장
            document.getElementById("result").innerText = `${containerDetails.CON_NO} : ${containerDetails.LOC}`;  // CON_NO : LOC 형식으로 출력
        }
        document.getElementById("message").innerText = messageText;
    })
    .catch((error) => {
        console.error('Error:', error);
        document.getElementById("message").innerText = '서버 요청 중 오류가 발생했습니다.';
    });
}

// 하차접수--------------------------------------------------------------------------------------------

var modalUnload = document.getElementById("modal-unload");
var spanUnload = document.getElementById("close-unload");
var containerSearchBtnUnload = document.getElementById("container-search-unload");
var searchContainerUnload = document.getElementById("search-container-unload");
var containerSubmitBtnUnload = document.getElementById("container-submit-unload");
var submitContainerOrderBtnUnload = document.getElementById("submit-container-order-unload");

containerSearchBtnUnload.onclick = function() {
    searchContainerUnload.style.display = "block";
    document.getElementById("result-unload").innerText = ''; // 검색 전 결과 초기화
    document.getElementById("message-unload").innerText = ''; // 검색 전 메시지 초기화
}

spanUnload.onclick = function() {
    modalUnload.style.display = "none";
    document.getElementById("result-unload").innerText = ''; // 창이 닫힐 때 결과 초기화
    document.getElementById("message-unload").innerText = ''; // 창이 닫힐 때 메시지 초기화
}

window.onclick = function(event) {
    if (event.target == modalUnload) {
        modalUnload.style.display = "none";
        document.getElementById("result-unload").innerText = ''; // 창이 닫힐 때 결과 초기화
        document.getElementById("message-unload").innerText = ''; // 창이 닫힐 때 메시지 초기화
    }
}

let containerDetailsUnload = {};

containerSubmitBtnUnload.onclick = function() {
    var containerNumber = document.getElementById("container-number-unload").value.trim();
    var divLoc = '부산북항';

    console.log('Sending data:', { containerNumber: containerNumber, divLoc: divLoc });

    fetch('/search-container-unload', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json; charset=utf-8',
        },
        body: JSON.stringify({ containerNumber: containerNumber, divLoc: divLoc }),
    })
    .then(response => response.json())
    .then(data => {
        console.log('Received data:', data);

        if (data.message) {
            document.getElementById("result-unload").innerText = data.message;
        } else {
            var { CON_NO, W_IDX, WISH } = data;
            document.getElementById("result-unload").innerText = `${CON_NO} : ${WISH}`;
            submitContainerOrderBtnUnload.style.display = "block";

            // Add event listener for order submission
            submitContainerOrderBtnUnload.onclick = function() {
                fetch('/insert-unload-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json; charset=utf-8',
                    },
                    body: JSON.stringify({ CON_NO: CON_NO, W_IDX: W_IDX }),
                })
                .then(response => response.json())
                .then(data => {
                    document.getElementById("message-unload").innerText = data.message;
                })
                .catch((error) => {
                    console.error('Error:', error);
                    document.getElementById("message-unload").innerText = '서버 요청 중 오류가 발생했습니다.';
                });
            }
        }
    })
    .catch((error) => {
        console.error('Error:', error);
        document.getElementById("result-unload").innerText = '서버 요청 중 오류가 발생했습니다.';
    });
}

submitContainerOrderBtnUnload.onclick = function() {
    if (!containerDetailsUnload.CON_NO) {
        alert('CON_NO 정보가 없습니다.');
        return;
    }

    fetch('/insert-unload-order', {  // 하차 접수용 엔드포인트
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ CON_NO: containerDetailsUnload.CON_NO }), // CON_NO를 서버로 전송
    })
    .then(response => response.json())
    .then(data => {
        var messageText = '';
        if (data.status === 'exists') {
            messageText = data.message;
        } else if (data.message) {
            messageText = data.message;
            containerDetailsUnload.CON_NO = data.CON_NO; // 업데이트된 CON_NO 저장
            containerDetailsUnload.LOC = data.LOC; // 업데이트된 LOC 저장
            document.getElementById("result-unload").innerText = `${data.CON_NO} : ${data.LOC}`;  // CON_NO : LOC 형식으로 출력
            // 모달을 닫지 않음
        }
        document.getElementById("message-unload").innerText = messageText;
    })
    .catch((error) => {
        console.error('Error:', error);
        document.getElementById("message-unload").innerText = '서버 요청 중 오류가 발생했습니다.';
    });
}

    </script>
